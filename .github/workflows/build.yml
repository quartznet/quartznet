# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActions (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_build --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: build

on:
  push:
    branches:
      - main
      - '3.x'
    tags:
      - 'v*.*.*'
    paths:
      - '**/*'
      - '!docs/**/*'
      - '!package.json'
      - '!package-lock.json'
      - '!readme.md'

jobs:
  windows-latest:
    name: windows-latest
    runs-on: windows-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: 'Run: Compile, UnitTest, IntegrationTest, Pack, Publish'
        run: ./build.cmd Compile UnitTest IntegrationTest Pack Publish
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          FEEDZ_API_KEY: ${{ secrets.FEEDZ_API_KEY }}
      - name: 'Publish: packages'
        uses: actions/upload-artifact@v3
        if: ${{ runner.os == 'Windows' }}
        with:
          name: packages
          path: artifacts/packages
  ubuntu-latest:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: 'Run: Compile, UnitTest, IntegrationTest, Pack, Publish'
        run: ./build.cmd Compile UnitTest IntegrationTest Pack Publish
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          FEEDZ_API_KEY: ${{ secrets.FEEDZ_API_KEY }}
      - name: 'Publish: packages'
        uses: actions/upload-artifact@v3
        if: ${{ runner.os == 'Windows' }}
        with:
          name: packages
          path: artifacts/packages
  macos-latest:
    name: macos-latest
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: 'Run: Compile, UnitTest, IntegrationTest, Pack, Publish'
        run: ./build.cmd Compile UnitTest IntegrationTest Pack Publish
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
          FEEDZ_API_KEY: ${{ secrets.FEEDZ_API_KEY }}
      - name: 'Publish: packages'
        uses: actions/upload-artifact@v3
        if: ${{ runner.os == 'Windows' }}
        with:
          name: packages
          path: artifacts/packages
